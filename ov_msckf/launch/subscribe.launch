<launch>

    <!-- what config we are going to run (should match folder name) -->
    <arg name="verbosity"   default="INFO" /> <!-- ALL, DEBUG, INFO, WARNING, ERROR, SILENT -->
    <arg name="config"      default="zed_mini" /> <!-- euroc_mav, tum_vi, rpng_aruco -->
    <arg name="config_path" default="$(find ov_msckf)/../config/$(arg config)/estimator_config.yaml" />

    <!-- mono or stereo and what ros bag to play -->
    <arg name="max_cameras" default="2" />
    <arg name="use_stereo"  default="true" />
    <arg name="bag_start"   default="0" /> <!-- v1-2: 0, mh1: 40, mh2: 35, mh3: 17.5, mh4-5: 15 -->
    <arg name="bag_rate"    default="1" />
    <arg name="dataset"     default="V1_01_easy" /> <!-- V1_01_easy, V1_02_medium, V2_02_medium -->
    <arg name="dobag"       default="false" /> <!-- if we should play back the bag -->
    <arg name="bag"         default="/media/patrick/RPNG\ FLASH\ 3/$(arg config)/$(arg dataset).bag" />
<!--    <arg name="bag"         default="/home/patrick/datasets/$(arg config)/$(arg dataset).bag" />-->
<!--    <arg name="bag"         default="/datasets/$(arg config)/$(arg dataset).bag" />-->

    <!-- saving trajectory path and timing information -->
    <arg name="dosave"      default="false" />
    <arg name="dotime"      default="false" />
    <arg name="path_est"    default="/tmp/traj_estimate.txt" />
    <arg name="path_time"   default="/tmp/traj_timing.txt" />

    <!-- if we should viz the groundtruth -->
    <arg name="dolivetraj"  default="false" />
    <arg name="path_gt"     default="$(find ov_data)/$(arg config)/$(arg dataset).txt" />


    <!-- MASTER NODE! -->
<!--    <node name="ov_msckf" pkg="ov_msckf" type="run_subscribe_msckf" output="screen" clear_params="true" required="true" launch-prefix="gdb -ex run &#45;&#45;args">-->
    <!--ode name="ov_msckf" pkg="ov_msckf" type="run_subscribe_msckf" output="screen" clear_params="true" required="true">

        <param name="verbosity"              type="string" value="$(arg verbosity)" />
        <param name="config_path"            type="string" value="$(arg config_path)" />
        
        <param name="use_stereo"             type="bool"   value="$(arg use_stereo)" />
        <param name="max_cameras"            type="int"    value="$(arg max_cameras)" />
        
        <param name="record_timing_information"   type="bool"   value="$(arg dotime)" />
        <param name="record_timing_filepath"      type="string" value="$(arg path_time)" />

    </node-->

    <!-- play the dataset -->
    <group if="$(arg dobag)">
        <node pkg="rosbag" type="play" name="rosbag" args="-d 1 -r $(arg bag_rate) -s $(arg bag_start) $(arg bag)" required="true"/>
    </group>

    <!-- record the trajectory if enabled -->
    <group if="$(arg dosave)">
        <node name="recorder_estimate" pkg="ov_eval" type="pose_to_file" output="screen" required="true">
            <param name="topic"      type="str" value="/ov_msckf/poseimu" />
            <param name="topic_type" type="str" value="PoseWithCovarianceStamped" />
            <param name="output"     type="str" value="$(arg path_est)" />
        </node>
    </group>

    <!-- path viz of aligned gt -->
    <group if="$(arg dolivetraj)">
        <node name="live_align_trajectory" pkg="ov_eval" type="live_align_trajectory" output="log" clear_params="true">
            <param name="alignment_type" type="str" value="posyaw" />
            <param name="path_gt"        type="str" value="$(arg path_gt)" />
        </node>
    </group>

    <node pkg="nodelet" type="nodelet" args="manager"
    name="ovmsckf_nodelet_manager" output="screen">
        
    </node>

	
	<node pkg="nodelet" type="nodelet" args="load ovmsckf_nodelet/OvmsckfNodeletClass ovmsckf_nodelet_manager"
    name="OvmsckfNodeletClass_loader" output="screen">
        <param name="config_path"            type="string" value="$(arg config_path)" />
        <param name="publish_global_to_imu_tf" type="bool" value="false"/>
        <param name="publish_world_to_body_tf" type="bool" value="false"/>
        <param name="publish_calibration_tf" type="bool" value="false"/>
        <remap from="/zedm/zed_node/imu/data_raw" to="/zed_nodelet/imu/data_raw" />
        <remap from="/zedm/zed_node/left_raw/image_raw_gray" to="/zed_nodelet/left_raw/image_raw_gray" />
        <remap from="/zedm/zed_node/right_raw/image_raw_gray" to="/zed_nodelet/right_raw/image_raw_gray" />
        <remap from="/OvmsckfNodeletClass_loader/odomworld" to="/OvmsckfNodeletClass_loader/odomworld_laptop" />
	</node>

    <!-- Camera Model and Name -->
    <arg name="camera_name"           default="zedm" /> <!-- The name you want -->
    <arg name="camera_model"          default="zedm" /> <!-- 'zed' or 'zedm' or 'zed2' -->
    <arg name="node_name"             default="zed_node" />

    <!-- Load SVO file -->
    <arg name="svo_file"              default="" /><!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
    <!-- Remote stream -->
    <arg name="stream"                default="" /> <!-- <arg name="stream" default="<ip_address>:<port>"> -->

    <!-- Base frame -->
    <arg name="base_frame"            default="base_link" />

    <!-- Publish ZED urdf -->
    <arg name="publish_urdf"          default="true" />

    <arg name="camera_id"             default="0" />
    <arg name="gpu_id"                default="-1" />

    <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_x"             default="0.0" />
    <arg name="cam_pos_y"             default="0.0" />
    <arg name="cam_pos_z"             default="0.0" />

    <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll"              default="0.0" />
    <arg name="cam_pitch"             default="0.0" />
    <arg name="cam_yaw"               default="0.0" />


    <!-- <node pkg="nodelet" type="nodelet" args="load zed_nodelets/ZEDWrapperNodelet ovmsckf_nodelet_manager"
    name="zed_nodelet" output="screen">
        <rosparam file="$(find zed_wrapper)/params/common_arpl.yaml" command="load" />
        <rosparam file="$(find zed_wrapper)/params/$(arg camera_model)_arpl.yaml" command="load" />

        <param name="general/camera_name"               value="$(arg camera_name)" />

        <param name="general/base_frame"                value="$(arg base_frame)" />

        <param name="svo_file"                          value="$(arg svo_file)" />

        <param name="stream"                            value="$(arg stream)" />
        <param name="general/zed_id"                    value="$(arg camera_id)" />
        <param name="general/gpu_id"                    value="$(arg gpu_id)" />
	</node>
    -->
	<!-- <node pkg="nodelet" type="nodelet" args="load butterworth_nodelet/OvfilterNodeletClass ovmsckf_nodelet_manager"
	    name="butterworth_nodelet" output="screen">

	</node>      -->
</launch>
